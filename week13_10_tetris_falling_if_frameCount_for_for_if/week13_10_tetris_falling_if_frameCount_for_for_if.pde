// week13_10_tetris_falling_if_frameCount_for_for_if
color[] c = {#000000, #777777, #9900CC, #CCCC00, #00B500, #CC0000}; // 顏色陣列


void setup() {
  size(240, 440); // 畫布大小
}

void draw() {
  // 繪製棋盤
  for (int i = 0; i < 22; i++) {
    for (int j = 0; j < 12; j++) {
      int now = grid[i][j]; // 當前格子數字
      fill(c[now]);         // 填充顏色
      rect(j * 20, i * 20, 20, 20); // 畫格子
    }
  }

  if (frameCount % 50 == 0) { // 每 50 幀執行下落
    int bad = 0; // 開始沒有撞擊
    // 從下到上檢查每一格
    for (int i = 20; i >= 1; i--) {
      for (int j = 1; j < 12-1; j++) {
        if (grid[i][j] == 2) { // 找到移動中的方塊
          if (grid[i + 1][j] != 2 && grid[i + 1][j] != 0) { // 如果到達底部或撞擊靜止方塊
            bad = 1; // 標記無法下移
          }
        }
      }
    }

    if (bad == 0) { // 如果可以下移
      for (int i = 20; i >= 1; i--) {
        for (int j = 1; j < 12-1; j++) {
          if (grid[i][j] == 2) {
            grid[i + 1][j] = 2; // 方塊下移
            grid[i][j] = 0; // 清除原位置
          }
        }
      }
    } else { // 如果無法下移
      for (int i = 20; i >= 0; i--) {
        for (int j = 0; j < 12; j++) {
          if (grid[i][j] == 2) {
            grid[i][j] = 1; // 方塊變為靜止狀態
          }
        }
      }
    }
  }
}



int [][] grid = {
  {1,1,1,1,1,1,1,1,1,1,1,1},
  {1,0,0,0,0,2,0,0,0,0,0,1},
  {1,0,0,0,0,2,2,0,0,0,0,1},
  {1,0,0,0,0,2,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,1}
};
